// script.js
document.addEventListener('DOMContentLoaded', () => {
  // Elements
  const themeBtn    = document.getElementById('theme-toggle');
  const langSelect  = document.getElementById('lang-select');
  const categoryEl  = document.getElementById('category');
  const contractEl  = document.getElementById('contractType');
  const coverageEl  = document.getElementById('coverage');
  const daysEl      = document.getElementById('days');
  const startEl     = document.getElementById('start-date');
  const endEl       = document.getElementById('end-date');
  const penaltyEl   = document.getElementById('penalty-amount');
  const atDec       = document.getElementById('attorney-decrease');
  const atInc       = document.getElementById('attorney-increase');
  const atCount     = document.getElementById('attorney-count');
  const pkDec       = document.getElementById('packet-decrease');
  const pkInc       = document.getElementById('packet-increase');
  const pkCount     = document.getElementById('packet-count');
  const outRate     = document.getElementById('out-rate');
  const outDays     = document.getElementById('out-days');
  const outEnd      = document.getElementById('out-end');
  const rentCost    = document.getElementById('rent-cost');
  const covCost     = document.getElementById('coverage-cost');
  const atCost      = document.getElementById('attorney-cost');
  const penCost     = document.getElementById('penalty-cost');
  const totCost     = document.getElementById('total-cost');
  const recEl       = document.getElementById('recipient-name');
  const edrEl       = document.getElementById('edrpou');
  const ibanEl      = document.getElementById('iban');
  const linkEl      = document.getElementById('insurance-link');
  const genBtn      = document.getElementById('generate-btn');
  const spinner     = genBtn.querySelector('.spinner');
  const copyBtn     = document.getElementById('copy-btn');
  const printBtn    = document.getElementById('print-btn');
  const txtArea     = document.getElementById('payment-text');
  const toast       = document.getElementById('toast');
  const warningEl   = document.getElementById('end-warning');

  // ‚Ä¶ (—É—Å—ñ —ñ–Ω—à—ñ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏ –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è –±–µ–∑ –∑–º—ñ–Ω) ‚Ä¶

  // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ä–µ–∫–≤—ñ–∑–∏—Ç—ñ–≤ –∑ UX-—ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º
  genBtn.addEventListener('click', () => {
    // –ü–æ–∫–∞–∑–∞—Ç–∏ —Å–ø—ñ–Ω–µ—Ä —ñ –∑–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ –∫–Ω–æ–ø–∫—É
    genBtn.disabled = true;
    spinner.style.display = 'inline-block';

    // –í–∞—à —ñ—Å–Ω—É—é—á–∏–π –∫–æ–¥ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó
    calculateAll();
    const days = getTermDays();
    const rateObj = dailyRates.find(r => days>=r.min && days<=r.max) || {rates:{}};
    const dailyRate = rateObj.rates[categoryEl.value] || 0;
    const rentAmount = dailyRate * days;
    const penaltyAmount = parseFloat(penaltyEl.value) || 0;
    const totalAmount = rentAmount + penaltyAmount;
    const lines = [
      '–î–ª—è –¥–∏—Å—Ç–∞–Ω—Ü—ñ–π–Ω–æ–≥–æ –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è —Å—Ç—Ä–æ–∫—É –¥—ñ—ó —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–æ–≥–æ —Å–µ–π—Ñ—É –ø—Ä–æ—Å–∏–º–æ –∑–¥—ñ–π—Å–Ω–∏—Ç–∏ –æ–ø–ª–∞—Ç—É:',
      '',
      `üí≥ –°—É–º–∞ –¥–æ —Å–ø–ª–∞—Ç–∏: ${totalAmount.toFixed(2)} –≥—Ä–Ω`,
      `üë§ –û—Ç—Ä–∏–º—É–≤–∞—á: ${recEl.value || '‚Äî'}`,
      `üÜî –ö–æ–¥ –Ñ–î–†–ü–û–£: ${edrEl.value || '‚Äî'}`,
      `üè¶ IBAN: ${ibanEl.value || '‚Äî'}`,
      '',
      'üìù –ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É:',
      '–ü—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è —Å—Ç—Ä–æ–∫—É –¥—ñ—ó —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–æ–≥–æ —Å–µ–π—Ñ—É',
      '',
      'üîó –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å–ø–ª–∞—Ç—É —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è:',
      linkEl.value.trim() || 'https://ars.aiwa.in.ua/docs/sdb/newID'
    ];
    txtArea.value = lines.join('\n');

    // –°—Ö–æ–≤–∞—Ç–∏ —Å–ø—ñ–Ω–µ—Ä —ñ —Ä–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏ –∫–Ω–æ–ø–∫—É
    spinner.style.display = 'none';
    genBtn.disabled = false;

    // –ü–æ–∫–∞–∑–∞—Ç–∏ —Ç–æ—Å—Ç
    toast.textContent = translations[langSelect.value].toast_generated;
    toast.classList.add('show');
    setTimeout(() => toast.classList.remove('show'), 1500);
  });

  // ‚Ä¶ (—Å–∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è, –¥—Ä—É–∫, —Ä–µ—à—Ç–∞ –ª–æ–≥—ñ–∫–∏) ‚Ä¶
});
