// script.js

document.addEventListener('DOMContentLoaded', () => {
  // 1. –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–∞—Ä–∏—Ñ—ñ–≤ (–æ–Ω–æ–≤—ñ—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –Ω–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç—É)
  // –¢–∞—Ä–∏—Ñ–∏ –æ—Ä–µ–Ω–¥–∏ —Å–µ–π—Ñ—ñ–≤ (–≥—Ä–Ω/–¥–µ–Ω—å, –∑ –ü–î–í)
  const dailyRates = [
    // –¥–æ 30 –¥–Ω—ñ–≤
    { min: 1,   max: 30,  rates: { 1: 39,  2: 51,  3: 63,  4: 63,  5: 63  } },
    // 31‚Äì90 –¥–Ω—ñ–≤
    { min: 31,  max: 90,  rates: { 1: 25,  2: 26,  3: 28,  4: 35,  5: 43  } },
    // 91‚Äì180 –¥–Ω—ñ–≤
    { min: 91,  max: 180, rates: { 1: 22,  2: 24,  3: 26,  4: 33,  5: 41  } },
    // 181‚Äì365 –¥–Ω—ñ–≤
    { min: 181, max: 365, rates: { 1: 20,  2: 22,  3: 24,  4: 29,  5: 40  } },
  ];
  // –°—É–º–∞ —Å—Ç—Ä–∞—Ö–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂—É (–±–µ–∑ –ü–î–í)
  const insuranceRates = [
    { min: 1,   max: 90,  cost: 285 },
    { min: 91,  max: 180, cost: 370 },
    { min: 181, max: 270, cost: 430 },
    { min: 271, max: 365, cost: 550 },
  ];
  // –ì—Ä–æ—à–æ–≤–µ –ø–æ–∫—Ä–∏—Ç—Ç—è –∑–≥—ñ–¥–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç—É
  const depositAmount   = 3000;  // –≥—Ä–Ω
  // —Ç–∞—Ä–∏—Ñ –∑–∞ –æ–¥–Ω—É –¥–æ–≤—ñ—Ä–µ–Ω—ñ—Å—Ç—å –∑–≥—ñ–¥–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç—É
  const attorneyTariff  = 300;   // –≥—Ä–Ω (250 + 50 –ü–î–í)

  // 2. –û—Ç—Ä–∏–º—É—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ DOM
  const categoryEl   = document.getElementById('category');
  const contractEl   = document.getElementById('contractType');
  const coverageEl   = document.getElementById('coverage');
  const daysEl       = document.getElementById('days');
  const startEl      = document.getElementById('start-date');
  const endEl        = document.getElementById('end-date');
  const penaltyEl    = document.getElementById('penalty-amount');
  const atDec        = document.getElementById('attorney-decrease');
  const atInc        = document.getElementById('attorney-increase');
  const atCount      = document.getElementById('attorney-count');

  const outRate      = document.getElementById('out-rate');
  const outDays      = document.getElementById('out-days');
  const outEnd       = document.getElementById('out-end');
  const rentCost     = document.getElementById('rent-cost');
  const covCost      = document.getElementById('coverage-cost');
  const atCost       = document.getElementById('attorney-cost');
  const penCost      = document.getElementById('penalty-cost');
  const totCost      = document.getElementById('total-cost');

  const recEl        = document.getElementById('recipient-name');
  const edrEl        = document.getElementById('edrpou');
  const ibanEl       = document.getElementById('iban');
  const linkEl       = document.getElementById('insurance-link');
  const txtArea      = document.getElementById('payment-text');

  const genBtn       = document.getElementById('generate-btn');
  const spinner      = genBtn.querySelector('.spinner');
  const copyBtn      = document.getElementById('copy-btn');
  const printBtn     = document.getElementById('print-btn');
  const copySumBtn   = document.getElementById('copy-summary-btn');

  const warningEl    = document.getElementById('end-warning');
  const toast        = document.getElementById('toast');

  // 3. Populate —Å–µ–ª–µ–∫—Ç—ñ–≤ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
  categoryEl.innerHTML = `
    <option value="1">–ö–∞—Ç–µ–≥–æ—Ä—ñ—è –Ü</option>
    <option value="2">–ö–∞—Ç–µ–≥–æ—Ä—ñ—è –Ü–Ü</option>
    <option value="3">–ö–∞—Ç–µ–≥–æ—Ä—ñ—è –Ü–Ü–Ü</option>
    <option value="4">–ö–∞—Ç–µ–≥–æ—Ä—ñ—è –ÜV</option>
    <option value="5">–ö–∞—Ç–µ–≥–æ—Ä—ñ—è V</option>
  `;
  contractEl.innerHTML = `
    <option value="new">–ù–æ–≤–∏–π –¥–æ–≥–æ–≤—ñ—Ä</option>
    <option value="extension">–ü—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è</option>
  `;
  coverageEl.innerHTML = `
    <option value="insurance">–°—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –∫–ª—é—á–∞</option>
    <option value="deposit">–ì—Ä–æ—à–æ–≤–µ –ø–æ–∫—Ä–∏—Ç—Ç—è</option>
  `;

  // 4. –î–æ–ø–æ–º—ñ–∂–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
  function getTermDays() {
    const s = new Date(startEl.value);
    const e = new Date(endEl.value);
    const rawDiff = Math.round((e - s) / (1000 * 60 * 60 * 24)) + 1;
    return rawDiff > 0 ? rawDiff : 0;
  }
  function syncEndDate() {
    const days = parseInt(daysEl.value, 10) || 1;
    const s = new Date(startEl.value);
    s.setDate(s.getDate() + days - 1);
    endEl.value = s.toISOString().slice(0, 10);
  }
  function syncDays() {
    daysEl.value = getTermDays();
  }
  function checkWeekend(dateStr) {
    const dow = new Date(dateStr).getDay();
    warningEl.style.display = (dow === 0 || dow === 6) ? 'block' : 'none';
  }
  function debounce(fn, ms) {
    let timeout;
    return (...args) => {
      clearTimeout(timeout);
      timeout = setTimeout(() => fn.apply(this, args), ms);
    };
  }

  function calculateAll() {
    const days = getTermDays();
    outDays.textContent = `${days} –¥–Ω.`;

    // —Ç–∞—Ä–∏—Ñ
    const dr = dailyRates.find(r => days >= r.min && days <= r.max) || { rates: {} };
    const dailyRate = dr.rates[categoryEl.value] || 0;
    outRate.textContent = `${dailyRate.toFixed(2)} –≥—Ä–Ω/–¥–µ–Ω—å`;

    // –æ—Ä–µ–Ω–¥–∞
    const rentAmt = dailyRate * days;
    rentCost.textContent = `${rentAmt.toFixed(2)} –≥—Ä–Ω`;

    // –ø–æ–∫—Ä–∏—Ç—Ç—è
    let coverageAmt = 0;
    if (coverageEl.value === 'insurance') {
      const ins = insuranceRates.find(r => days >= r.min && days <= r.max) || { cost: 0 };
      coverageAmt = ins.cost;
    } else if (contractEl.value === 'new') {
      coverageAmt = depositAmount;
    }
    covCost.textContent = `${coverageAmt.toFixed(2)} –≥—Ä–Ω`;

    // –¥–æ–≤—ñ—Ä–µ–Ω–æ—Å—Ç—ñ
    const aCount = parseInt(atCount.textContent, 10) || 0;
    const aAmt = aCount * attorneyTariff;
    atCost.textContent = `${aAmt.toFixed(2)} –≥—Ä–Ω`;

    // –ø–µ–Ω—è
    const pAmt = parseFloat(penaltyEl.value) || 0;
    penCost.textContent = `${pAmt.toFixed(2)} –≥—Ä–Ω`;

    // –ø—ñ–¥—Å—É–º–æ–∫
    const total = rentAmt + coverageAmt + aAmt + pAmt;
    totCost.textContent = `${total.toFixed(2)} –≥—Ä–Ω`;

    checkWeekend(endEl.value);
  }

  function generatePaymentText() {
    const total = parseFloat(totCost.textContent) || 0;
    const lines = [
      '–î–ª—è –¥–∏—Å—Ç–∞–Ω—Ü—ñ–π–Ω–æ–≥–æ –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è —Å—Ç—Ä–æ–∫—É –¥—ñ—ó —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–æ–≥–æ —Å–µ–π—Ñ—É –ø—Ä–æ—Å–∏–º–æ –∑–¥—ñ–π—Å–Ω–∏—Ç–∏ –æ–ø–ª–∞—Ç—É:',
      '',
      `üí≥ –°—É–º–∞ –¥–æ —Å–ø–ª–∞—Ç–∏: ${total.toFixed(2)} –≥—Ä–Ω`,
      `üë§ –û—Ç—Ä–∏–º—É–≤–∞—á: ${recEl.value || '‚Äî'}`,
      `üÜî –ö–æ–¥ –Ñ–î–†–ü–û–£: ${edrEl.value || '‚Äî'}`,
      `üè¶ IBAN: ${ibanEl.value || '‚Äî'}`,
      '',
      'üìù –ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É:',
      '–ü—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è —Å—Ç—Ä–æ–∫—É –¥—ñ—ó —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–æ–≥–æ —Å–µ–π—Ñ—É',
      '',
      'üîó –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å–ø–ª–∞—Ç—É —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è:',
      linkEl.value.trim() || 'https://ars.aiwa.in.ua/docs/sdb/newID'
    ];
    txtArea.value = lines.join('\n');
  }

  function showToast(msg) {
    toast.textContent = msg;
    toast.classList.add('show');
    setTimeout(() => toast.classList.remove('show'), 1500);
  }

  // 5. –û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
  daysEl.addEventListener('input', debounce(() => {
    syncEndDate();
    calculateAll();
  }, 300));
  startEl.addEventListener('change', () => { syncEndDate(); calculateAll(); });
  endEl.addEventListener('change', () => { syncDays(); calculateAll(); });
  [categoryEl, contractEl, coverageEl].forEach(el => el.addEventListener('change', calculateAll));
  atDec.addEventListener('click', () => { if(parseInt(atCount.textContent,10)>0) atCount.textContent--; calculateAll(); });
  atInc.addEventListener('click', () => { atCount.textContent++; calculateAll(); });
  genBtn.addEventListener('click', () => { genBtn.disabled=true; spinner.style.display='inline-block'; calculateAll(); generatePaymentText(); spinner.style.display='none'; genBtn.disabled=false; showToast('–†–µ–∫–≤—ñ–∑–∏—Ç–∏ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ'); });
  copyBtn.addEventListener('click', () => { txtArea.select(); document.execCommand('copy'); showToast('–¢–µ–∫—Å—Ç —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ'); });
  printBtn.addEventListener('click', () => { const inv=document.getElementById('invoice-print'); inv.innerHTML=`<pre>${txtArea.value}</pre>`; inv.removeAttribute('aria-hidden'); window.print(); inv.setAttribute('aria-hidden','true'); });
  copySumBtn.addEventListener('click', () => { const lines=['–ü—ñ–¥—Å—É–º–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:']; document.querySelectorAll('.summary-panel .summary-item').forEach(item => { const label=item.querySelector('span:first-child').textContent.replace(/:$/, '').trim(); const value=item.querySelector('span:last-child').textContent.trim(); lines.push(`${label}: ${value}`); }); const totalLabel=document.querySelector('.summary-panel .summary-total strong').textContent.replace(/:$/, '').trim(); const totalValue=document.querySelector('.summary-panel .summary-total span').textContent.trim(); lines.push(`${totalLabel}: ${totalValue}`); const temp=document.createElement('textarea'); temp.value=lines.join('\n'); document.body.appendChild(temp); temp.select(); document.execCommand('copy'); document.body.removeChild(temp); showToast('–ü—ñ–¥—Å—É–º–∫–∏ —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ'); });
  // 6. –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
  const today=new Date().toISOString().slice(0,10);
  startEl.value=endEl.value=today;
  syncEndDate();
  calculateAll();
});
